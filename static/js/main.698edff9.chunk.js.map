{"version":3,"sources":["WebAPI.js","Contexts.js","LoginPage.js","Register.js","AddArticle.js","AboutMe.js","PageBar.js","SingleArticle.js","Article.js","Body.js","ArticleList.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","getSingleArticle","id","fetch","then","res","json","getMe","token","localStorage","getItem","headers","authorization","Authorization","createContext","CheckNewArticleAmount","LoginPage","useState","errorMessage","setErrorMessage","setUser","useContext","history","useHistory","className","onSubmit","e","preventDefault","username","password","method","body","JSON","stringify","login","target","elements","value","result","ok","message","setItem","response","toString","data","push","htmlFor","type","placeholder","RegisterPage","nickname","passwordAgain","register","AddArticlePage","newArticleAmount","setNewArticleAmount","action","alert","title","addArticle","content","name","required","AboutMePage","PageBar","articlesAmount","setNowPage","nowPage","lastPage","Math","ceil","arr","Array","fill","handleClick","pageNumber","Paginate","onClick","map","currentValue","index","abs","SingleArticle","singleArticle","setSingleArticle","Date","createdAt","toLocaleString","Article","article","handleClickSingleArticle","length","substring","userId","Body","articles","articleId","a","scope","ArticleListPage","setArticles","setArticlesAmount","useEffect","articleFetch","get","fetchFiveArticle","getFiveArticle","Header","user","href","App","Provider","exact","path","ArticleList","Register","AddArticle","AboutMe","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.698edff9.chunk.js","sourcesContent":["const BASE_URL = 'https://student-json-api.lidemy.me'\n\nexport const getFiveArticle = nowPage => {\n  async function fetchFiveArticle() {\n    try {\n      const articleFetch = await fetch(\n        `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${nowPage}&_limit=5`\n      )\n      const articles = await articleFetch.json()\n      const articlesAmount = articleFetch.headers.get('x-total-count')\n      const result = { articles, articlesAmount }\n      return result\n    } catch (error) {}\n  }\n  const result = fetchFiveArticle()\n  return result\n}\nexport const getSingleArticle = id => {\n  return fetch(`${BASE_URL}/posts?id=${id}`).then(res => res.json())\n}\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then(res => res.json())\n}\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then(res => res.json())\n}\nexport const addArticle = (title, body, token) => {\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then(res => res.json())\n}\nexport const getMe = () => {\n  // 發文的時候也需要驗證使用者，所以要用 getMe 這個 api 用 token 驗證\n  // 而不用再輸入一次帳號密碼\n  const token = localStorage.getItem('token')\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then(res => res.json())\n}\n\nexport const deleteArticle = articleNumber => {\n  //用來刪除文章用的，沒有在頁面顯示出來\n  return fetch(`${BASE_URL}/posts/${articleNumber}`, {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json',\n    },\n  }).then(res => res.json())\n}\n","import { createContext } from 'react'\n\nexport const Authorization = createContext(null)\nexport const CheckNewArticleAmount = createContext(null)\n","import React from 'react'\nimport { useState, useContext } from 'react'\nimport { login, getMe } from './WebAPI'\nimport { useHistory } from 'react-router-dom'\nimport { Authorization } from './Contexts'\nconst LoginPage = () => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const { setUser } = useContext(Authorization)\n  const history = useHistory()\n  const handleFormSubmit = e => {\n    e.preventDefault()\n    let username = e.target.elements.username?.value\n    let password = e.target.elements.password?.value\n    login(username, password).then(result => {\n      if (result.ok === 0) return setErrorMessage(result.message)\n      const { token } = result // response 回傳的資料會有 token ，結構出來\n      localStorage.setItem('token', token) // 給 localStorage 設定上去\n      getMe().then(response => {\n        if (response.ok !== 1) {\n          localStorage.setItem(null)\n          return setErrorMessage(response.toString())\n        }\n        setUser(response.data) // 覺得其實有拿到上面 token 就可以了，也可以把 user 設定成 token 的值\n        // 有值就好，就可以給 header 判斷是否是登入或是登出狀態\n        // 就可以少發一個 request\n        history.push('/') // 導回首頁\n      })\n    })\n  }\n\n  return (\n    <div className=\"flex h-screen bg-pink-200\">\n      <div className=\"w-full max-w-md px-16 py-10 m-auto bg-white border rounded-lg border-primaryBorder shadow-default\">\n        <h1 className=\"mt-4 mb-12 text-2xl font-medium text-center text-primary\">\n          Log in to your account 🔐\n        </h1>\n\n        <form onSubmit={handleFormSubmit}>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className={`w-full p-2 text-primary border rounded-md outline-none text-sm transition duration-150 ease-in-out mb-4`}\n              id=\"username\"\n              placeholder=\"Your username\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className={`w-full p-2 text-primary border rounded-md outline-none text-sm transition duration-150 ease-in-out mb-4`}\n              id=\"password\"\n              placeholder=\"Your Password\"\n            />\n          </div>\n          {errorMessage && <div className=\"text-red-500\">{errorMessage}</div>}\n          <div className=\"flex items-center justify-center mt-6\">\n            <button\n              className={` bg-pink-500 py-2 px-4 text-sm text-white rounded border border-green focus:outline-none focus:border-green-dark`}\n            >\n              Login\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React from 'react'\nimport { useState, useContext } from 'react'\nimport { getMe, register } from './WebAPI'\nimport { useHistory } from 'react-router-dom'\nimport { Authorization } from './Contexts'\nconst RegisterPage = () => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const { setUser } = useContext(Authorization)\n  const history = useHistory()\n  const handleFormSubmit = e => {\n    e.preventDefault()\n    let nickname = e.target.elements.nickname?.value\n    let username = e.target.elements.username?.value\n    let password = e.target.elements.password?.value\n    let passwordAgain = e.target.elements.passwordAgain?.value\n    if (password !== passwordAgain) {\n      return setErrorMessage('兩次密碼不相同')\n    }\n\n    register(nickname, username, password).then(data => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message)\n      }\n      if (data.ok === 1) {\n        localStorage.setItem('token', data.token)\n        getMe().then(response => {\n          if (data.ok !== 1) {\n            localStorage.setItem('token', null)\n            return setErrorMessage(response.toString())\n          }\n          setUser(response.data)\n          history.push('/')\n        })\n      }\n    })\n  }\n\n  return (\n    <div className=\"flex h-auto bg-pink-200\">\n      <div className=\"w-full max-w-md px-16 py-10 m-auto my-8 bg-white border rounded-lg border-primaryBorder shadow-default\">\n        <h1 className=\"mt-4 mb-12 text-2xl font-medium text-center text-primary\">\n          Create a new account 🔐\n        </h1>\n\n        <form onSubmit={handleFormSubmit}>\n          <div>\n            <label htmlFor=\"username\">Nickname</label>\n            <input\n              type=\"text\"\n              className={`w-full p-2 text-primary border rounded-md outline-none text-sm transition duration-150 ease-in-out mb-4`}\n              id=\"nickname\"\n              placeholder=\"Your nickname\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className={`w-full p-2 text-primary border rounded-md outline-none text-sm transition duration-150 ease-in-out mb-4`}\n              id=\"username\"\n              placeholder=\"Your username\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className={`w-full p-2 text-primary border rounded-md outline-none text-sm transition duration-150 ease-in-out mb-4`}\n              id=\"password\"\n              placeholder=\"Your Password\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password Again</label>\n            <input\n              type=\"password\"\n              className={`w-full p-2 text-primary border rounded-md outline-none text-sm transition duration-150 ease-in-out mb-4`}\n              id=\"passwordAgain\"\n              placeholder=\"Your Password Again\"\n            />\n          </div>\n          {errorMessage && <div className=\"text-red-500\">{errorMessage}</div>}\n          <div className=\"flex items-center justify-center mt-6\">\n            <button\n              className={` bg-pink-500 py-2 px-4 text-sm text-white rounded border border-green focus:outline-none focus:border-green-dark`}\n            >\n              Register\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default RegisterPage\n","import React from 'react'\nimport { useContext } from 'react'\nimport { addArticle } from './WebAPI'\nimport { useHistory } from 'react-router-dom'\nimport { CheckNewArticleAmount } from './Contexts'\n\nconst AddArticlePage = () => {\n  const token = localStorage.getItem('token')\n  const history = useHistory()\n  const { newArticleAmount, setNewArticleAmount } = useContext(\n    CheckNewArticleAmount\n  ) // 控制住的是否有新增文章，有的話就要重新 render\n\n  const handleFormSubmit = e => {\n    e.preventDefault()\n    if (!token) {\n      // 如果假的 token 也會通過這個判斷，不過在底下的 addArticle 也會帶上 token 來驗證，就沒有用 getMe 來驗證了\n      return alert('還沒有登入喔，請登入後再試一次')\n    }\n    let title = e.target.elements.title?.value\n    let content = e.target.elements.content?.value\n\n    addArticle(title, content, token).then(() => {\n      // 發 request 的非同步都要記得用 .then 才能做後面的事情\n      setNewArticleAmount(newArticleAmount + 1) // 如果 newArticle 有變動 那首頁要重新 render\n      history.push('/')\n    })\n  }\n\n  return (\n    <div className=\"py-12 bg-pink-200 border-4 \">\n      <div className=\"mx-auto rounded-lg max-w-7xl sm:px-6 lg:px-8\">\n        <div className=\"overflow-hidden bg-pink-200 sm:rounded-lg\">\n          <div className=\"p-6 bg-pink-200 border-b border-gray-200\">\n            <form method=\"POST\" action=\"action.php\" onSubmit={handleFormSubmit}>\n              <div className=\"mb-4\">\n                <label className=\"text-xl text-gray-600\">\n                  Title <span className=\"text-red-500\">*</span>\n                </label>\n                <br />\n                <input\n                  type=\"text\"\n                  className=\"w-full p-2 border-2 border-gray-300\"\n                  name=\"title\"\n                  id=\"title\"\n                  required\n                />\n              </div>\n\n              <div className=\"mb-8\">\n                <label className=\"text-xl text-gray-600\">\n                  Content <span className=\"text-red-500\">*</span>\n                </label>\n                <br />\n                <textarea\n                  name=\"content\"\n                  className=\"w-full border-2 border-gray-500 h-96\"\n                />\n              </div>\n              <div className=\"flex p-1\">\n                <button\n                  className=\"p-3 text-white bg-pink-400 rounded-md hover:bg-pink-500 \"\n                  required\n                >\n                  Submit\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddArticlePage\n","import React from 'react'\n\nconst AboutMePage = () => {\n  return (\n    <div className=\"flex h-screen bg-pink-200 bg-gray-bg1 rounded-xl\">\n      <div className=\"w-full max-w-md px-16 py-10 m-auto bg-white border border-pink-500 rounded-2xl shadow-default\">\n        <h1 className=\"mt-4 mb-12 text-5xl font-medium text-center text-pink-500 text-primary\">\n          a_u_z\n        </h1>\n        <h4 className=\"mt-4 mb-12 text-xl font-medium text-center text-pink-400 text-primary\">\n          be better\n        </h4>\n        <h4 className=\"mt-4 mb-12 text-xl font-medium text-center text-pink-400 text-primary\">\n          and\n        </h4>\n\n        <h4 className=\"mt-4 mb-12 text-xl font-medium text-center text-pink-400 text-primary\">\n          enjoy every moment\n        </h4>\n      </div>\n    </div>\n  )\n}\n\nexport default AboutMePage\n","import React from 'react'\nfunction PageBar({ articlesAmount, setNowPage, nowPage }) {\n  let lastPage = Math.ceil(articlesAmount / 5) // 無條件進入，計算最後一頁的數字該是多少\n  const arr = Array(lastPage).fill(null) // 有幾頁，就要跑幾圈，所以就用一個 array 給 map 用\n  function handleClick(pageNumber) {\n    setNowPage(pageNumber)\n  }\n  function Paginate({ pageNumber }) {\n    return (\n      <button\n        className=\"mx-1 inline-block my-3 py-1.5 px-2 border-2 bg-pink-200 text-gray-700  rounded-md border-pink-200 border-double\"\n        onClick={() => handleClick(pageNumber)}\n      >\n        第{pageNumber}頁\n      </button>\n    )\n  }\n  return (\n    <div className=\"text-center \">\n      {arr.map((currentValue, index) => {\n        if (nowPage === index + 1) {\n          // 當前頁面的外觀跟題他頁不同，所以拉出來獨立寫一個\n          return (\n            <button\n              key={index + 1}\n              className=\"mx-1 inline-block my-3 py-1.5 px-2 border-2 bg-pink-600 text-white bg-opacity-70  rounded-md border-pink-600 border-opacity-10 border-double\"\n              onClick={() => handleClick(nowPage)}\n            >\n              第{nowPage}頁\n            </button>\n          )\n        } else if (index + 1 === 1) {\n          // 第一頁，一定要顯示\n          return <Paginate key={index + 1} pageNumber={index + 1}></Paginate>\n        } else if (index + 1 === lastPage) {\n          // 最後一頁，一定要顯示\n          return <Paginate key={index + 1} pageNumber={index + 1}></Paginate>\n        } else if (Math.abs(nowPage - index - 1) <= 1) {\n          // 當前頁前後一頁，一定要顯示\n          return <Paginate key={index + 1} pageNumber={index + 1}></Paginate>\n        } else if (Math.abs(nowPage - index - 1) <= 2) {\n          // 當前頁的前後兩頁，都用 ... 顯示，樣式不同，所以也獨立寫樣式\n          // 如果總共有 10 頁，現在在第五頁，用 else 寫會變成 p.2 p.3 都會變成 「...」\n          // 我只要一個 「...」，所以用 else if\n          return (\n            <button\n              key={index + 1}\n              className=\"mx-1 inline-block my-3 py-1.5 px-2 border-2 bg-pink-200 text-gray-700  rounded-md border-pink-200 border-double\"\n            >\n              ..........\n            </button>\n          )\n        }\n      })}\n    </div>\n  )\n}\n\nexport default PageBar\n","import React from 'react'\nfunction SingleArticle({ singleArticle, setSingleArticle }) {\n  function handelClickBack() {\n    setSingleArticle(null)\n    // 回到上一頁的按鈕就是清空 singleArticle 這樣頁面就會便回成文章列表模式\n    // 為了要在單篇文章模式下，點左上的「React 部落格」可以回到文章列表模式\n    // 把點左上的「React 部落格」的 Router 改成 \"/\" 真的重發一次 request\n  }\n  return (\n    <div className=\"flex h-auto bg-pink-200 bg-gray-bg1 rounded-xl\">\n      <div className=\"w-full max-w-2xl px-12 py-10 m-auto my-8 bg-white border border-pink-500 rounded-2xl shadow-default\">\n        <h1 className=\"mt-4 mb-8 text-3xl font-medium tracking-widest text-center text-pink-500 text-primary\">\n          {singleArticle.title}\n        </h1>\n        <h4 className=\"mt-2 mb-12 font-medium tracking-widest text-left text-pink-400 text-m text-primary\">\n          日期：{new Date(singleArticle.createdAt).toLocaleString()}\n        </h4>\n        <h4 className=\"mt-4 mb-12 text-xl leading-8 tracking-widest text-left text-pink-400 text-primary\">\n          {singleArticle.body}\n        </h4>\n        <button\n          onClick={handelClickBack}\n          className=\" inline-block p-1.5 border-2 border-opacity-75 rounded-md border-pink-400 border-double mt-4 mb-12 text-xl leading-8 tracking-widest text-center text-pink-400 text-primary\"\n        >\n          回到上一頁\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleArticle\n","import React from 'react'\n\nexport default function Article({ article, handleClickSingleArticle }) {\n  if (article.body.length > 150) {\n    // 如果文章字數太多，超過 150 個字以後就用 ... 來顯示，並且可以點到單篇文章模式\n    return (\n      <tr key={article.id}>\n        <td className=\"w-12 px-6 py-4 whitespace-nowrap\">\n          <div className=\"flex items-center\">\n            <div className=\"overflow-x-hidden font-medium text-gray-900 w-96 text-m \">\n              {article.title}\n            </div>\n          </div>\n        </td>\n        <td className=\"p-5 text-gray-900 break-all text-m\">\n          {article.body.substring(0, 150)}\n          <span className=\"inline-block mx-2\"> </span>\n          {'......'}\n          <span className=\"inline-block mx-2\"> </span>\n          <button\n            className=\"inline-block p-1.5 border-2 border-opacity-75 rounded-md border-pink-400 border-double\"\n            onClick={() => handleClickSingleArticle(article.id)}\n          >\n            閱讀更多\n          </button>\n        </td>\n        <td className=\"px-6 py-4 whitespace-nowrap\">\n          <div className=\"px-2 py-3 text-gray-900 whitespace-nowrap text-m\">\n            {article.userId}\n          </div>\n        </td>\n        <td className=\"px-6 py-4 whitespace-nowrap\">\n          <div className=\"text-gray-900 text-m\">\n            {new Date(article.createdAt).toLocaleString()}\n          </div>\n        </td>\n      </tr>\n    )\n  } else {\n    return (\n      <tr key={article.id}>\n        <td className=\"w-12 px-6 py-4 whitespace-nowrap\">\n          <div className=\"flex items-center \">\n            <div className=\"overflow-x-hidden font-medium text-gray-900 w-96 text-m \">\n              {article.title}\n            </div>\n          </div>\n        </td>\n        <td className=\"p-5 text-gray-900 break-all text-m\">{article.body}</td>\n        <td className=\"px-6 py-4 whitespace-nowrap\">\n          <div className=\"px-2 py-3 text-gray-900 whitespace-nowrap text-m\">\n            {article.userId}\n          </div>\n        </td>\n        <td className=\"px-6 py-4 whitespace-nowrap\">\n          <div className=\"text-gray-900 text-m\">\n            {new Date(article.createdAt).toLocaleString()}\n          </div>\n        </td>\n      </tr>\n    )\n  }\n}\n","import React from 'react'\nimport { getSingleArticle } from './WebAPI'\nimport SingleArticle from './SingleArticle'\nimport Article from './Article'\nfunction Body({ articles, singleArticle, setSingleArticle }) {\n  async function handleClickSingleArticle(articleId) {\n    const result = await getSingleArticle(articleId)\n    setSingleArticle(result[0])\n  }\n\n  return (\n    <>\n      {/* 判斷是否是單頁模式 */}\n      {singleArticle ? (\n        <SingleArticle\n          singleArticle={singleArticle}\n          setSingleArticle={setSingleArticle}\n        ></SingleArticle>\n      ) : (\n        <table className=\"min-w-full divide-y divide-gray-200 \">\n          <thead className=\"bg-pink-300\">\n            <tr>\n              <th\n                scope=\"col\"\n                className=\"px-6 py-3 font-medium tracking-wider text-left text-gray-500 uppercase text-m\"\n              >\n                TITLE\n              </th>\n              <th\n                scope=\"col\"\n                className=\"px-6 py-3 font-medium tracking-wider text-left text-gray-500 uppercase text-m\"\n              >\n                CONTENT\n              </th>\n              <th\n                scope=\"col\"\n                className=\"px-6 py-4 font-medium tracking-wider text-left text-gray-500 uppercase text-m\"\n              >\n                USERID\n              </th>\n              <th\n                scope=\"col\"\n                className=\"px-6 py-3 font-medium tracking-wider text-left text-gray-500 uppercase text-m\"\n              >\n                CREATEDAT\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-pink-100 divide-y-2 divide-pink-300\">\n            {articles.map(article => {\n              return (\n                <>\n                  <Article\n                    key={article.id}\n                    article={article}\n                    handleClickSingleArticle={handleClickSingleArticle}\n                  />\n                </>\n              )\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  )\n}\n\nexport default Body\n","import React from 'react'\nimport { useState, useEffect, useContext } from 'react'\nimport { getFiveArticle } from './WebAPI'\nimport { CheckNewArticleAmount } from './Contexts'\nimport PageBar from './PageBar'\nimport Body from './Body'\nconst ArticleListPage = () => {\n  const [articles, setArticles] = useState([]) // 這裡存放去資料庫抓出的文章資料\n  const [articlesAmount, setArticlesAmount] = useState(null) // 去資料庫抓的文章總數，用 response 的 header 的資訊\n  const [singleArticle, setSingleArticle] = useState(null) // 如果有值，就表示要看單一篇文章，頁面就會改變\n\n  const { newArticleAmount } = useContext(CheckNewArticleAmount) // 取出用 useContext 傳送的 state\n\n  const [nowPage, setNowPage] = useState(1) // 當前頁面，初始值是第一頁\n  useEffect(() => {\n    getFiveArticle(nowPage).then(result => {\n      setArticles(result.articles) // 資料庫拿回來的資料放入 articles 這個 state 裡面\n      setArticlesAmount(result.articlesAmount) // 登記文章總數，用來計算最後一頁是多少用的\n    })\n  }, [nowPage, newArticleAmount]) // 依賴當前頁面（nowPage），如果現在是第三頁那就要重新執行一次\n  // 依賴 newArticleAmount(看是否有新增文章)，如果有新增文章，那麼資料要重新抓取，這樣才會顯示最新的文章\n  return (\n    <>\n      <Body\n        articles={articles}\n        singleArticle={singleArticle}\n        setSingleArticle={setSingleArticle}\n      ></Body>\n      {/* 如果有 singleArticle 代表現在是單篇文章模式，不是文章列表模式，所以就不用顯示頁數的 bar */}\n      {singleArticle ? (\n        ''\n      ) : (\n        <PageBar\n          articlesAmount={articlesAmount}\n          setNowPage={setNowPage}\n          nowPage={nowPage}\n        ></PageBar>\n      )}\n    </>\n  )\n}\n\nexport default ArticleListPage\n","import React from 'react'\nimport { useContext } from 'react'\nimport { Authorization } from './Contexts'\nimport { getMe } from './WebAPI'\n\nexport default function Header() {\n  const { user, setUser } = useContext(Authorization)\n  // 取出透過 useContext 的值，用來判斷是否有登入狀態\n  getMe()\n  function handleLogout() {\n    localStorage.setItem('token', '') // 把 localStorage 清空\n    setUser(null) // user 清空\n    alert('登出成功～～')\n  }\n  return (\n    <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-4 my-4 bg-pink-500 border shadow rounded-xl\">\n      <div className=\"container flex flex-wrap items-center justify-between px-4 mx-auto\">\n        <div className=\"relative flex justify-between w-full px-4 lg:w-auto lg:static lg:block lg:justify-start\">\n          <a\n            className=\"inline-block py-2 mr-4 text-4xl font-bold leading-relaxed tracking-widest text-white whitespace-nowrap\"\n            href=\"#/\"\n          >\n            React 部落格\n          </a>{' '}\n          <span className=\"inline-block py-2 text-2xl font-bold leading-relaxed tracking-widest text-white ml-9 whitespace-nowrap\">\n            さくら\n          </span>\n          <button\n            className=\"block px-3 py-1 text-xl leading-none text-white bg-transparent border border-transparent border-solid rounded outline-none cursor-pointer lg:hidden focus:outline-none\"\n            type=\"button\"\n          >\n            <i className=\"fas fa-bars\"></i>\n          </button>\n        </div>\n        <div\n          className={'lg:flex flex-grow items-center'}\n          id=\"example-navbar-info\"\n        >\n          <ul className=\"flex flex-col list-none lg:flex-row lg:ml-auto\">\n            <li className=\"nav-item\">\n              <a\n                className=\"flex items-center px-3 py-2 text-xl font-bold leading-snug text-white uppercase hover:opacity-75\"\n                href=\"#about-me\"\n              >\n                關於我\n              </a>\n            </li>\n            <li className=\"mx-4 nav-item\">\n              {user && (\n                <a\n                  className=\"flex items-center px-3 py-2 text-xl font-bold leading-snug text-white uppercase hover:opacity-75\"\n                  href=\"#add-article\"\n                >\n                  發表文章\n                </a>\n              )}\n            </li>\n            <li className=\"mx-4 nav-item\">\n              {!user && (\n                <a\n                  className=\"flex items-center px-3 py-2 text-xl font-bold leading-snug text-white uppercase hover:opacity-75\"\n                  href=\"#/register\"\n                >\n                  註冊\n                </a>\n              )}\n            </li>\n            <li className=\"mx-4 nav-item\">\n              {user && (\n                <button\n                  className=\"flex items-center px-3 py-2 text-xl font-bold leading-snug text-white uppercase hover:opacity-75\"\n                  onClick={handleLogout}\n                >\n                  登出\n                </button>\n              )}\n              {!user && (\n                <a\n                  className=\"flex items-center px-3 py-2 text-xl font-bold leading-snug text-white uppercase hover:opacity-75\"\n                  href=\"#/login\"\n                >\n                  登入\n                </a>\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import './App.css'\nimport { useState, useEffect } from 'react' // 有用到任何 hooks 都要在這邊 import 要用 {} 包起來\nimport './style.css'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n// 用 HashRouter 可以解決路徑重新整理變成向 Server 發送 request 的問題\nimport { getMe } from './WebAPI'\nimport LoginPage from './LoginPage'\nimport RegisterPage from './Register'\nimport AddArticlePage from './AddArticle'\nimport AboutMePage from './AboutMe'\nimport ArticleListPage from './ArticleList'\nimport Header from './Header'\n\nimport { Authorization, CheckNewArticleAmount } from './Contexts'\n// import createContext 的東西，才可以用 <XXX.Provider value={}> 傳遞出去\nfunction App() {\n  const [user, setUser] = useState(null) // user 有東西就是有登入，沒有就是沒登入\n  useEffect(() => {\n    getMe().then(response => {\n      response.ok !== 1\n        ? localStorage.setItem('token', null)\n        : setUser(response.data)\n    })\n  }, [])\n  // 只執行一次，預防如果登入了，然後重新整理，user 就被清掉，所以透過 localStorage 還存著的 token 來驗證\n\n  const [newArticleAmount, setNewArticleAmount] = useState(0)\n  // 如果有新增文章，那 newArticleAmount 會 ＋1 然後連動到 useEffect 觸發重新執行\n  return (\n    <>\n      <Authorization.Provider value={{ user, setUser }}>\n        {/* 用 useContext 傳送需要的東西 */}\n        <CheckNewArticleAmount.Provider\n          value={{ newArticleAmount, setNewArticleAmount }}\n        >\n          <div className=\"flex flex-wrap py-5\">\n            <div className=\"w-full px-14 \">\n              <Header></Header>\n              <div className=\"flex flex-col\">\n                <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                  <div className=\"inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8\">\n                    <div className=\"overflow-hidden border shadow rounded-2xl sm:rounded-lg\">\n                      <Router>\n                        <Switch>\n                          <Route exact path=\"/\">\n                            <ArticleListPage></ArticleListPage>\n                          </Route>\n                          <Route path=\"/login\">\n                            <LoginPage></LoginPage>\n                          </Route>\n                          <Route path=\"/register\">\n                            <RegisterPage></RegisterPage>\n                          </Route>\n                          <Route path=\"/add-article\">\n                            <AddArticlePage></AddArticlePage>\n                          </Route>\n                          <Route path=\"/about-me\">\n                            <AboutMePage></AboutMePage>\n                          </Route>\n                        </Switch>\n                      </Router>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CheckNewArticleAmount.Provider>\n      </Authorization.Provider>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}